function exportToCSV() {
  try {
    const results = Array.from(document.querySelectorAll('.result-card')).map(card => {
      const url = card.querySelector('.url').textContent;
      const status = card.querySelector('.status-text').textContent.trim();
      const statusTooltip = card.querySelector('.status-badge').getAttribute('data-tooltip');
      const details = card.querySelector('.details').innerHTML.replace(/<br>/g, '; ');
      const redirectChain = details.includes('Redirect Chain') ? details.split('; ').find(d => d.startsWith('Redirect Chain')).replace('Redirect Chain: ', '') : '-';
      const error = details.includes('Redirect Chain') ? details.split('; ').filter(d => !d.startsWith('Redirect Chain')).join('; ') : details || '-';
      const timestamp = card.querySelector('.timestamp').textContent.replace('Scanned: ', '');
      return { url, status, statusTooltip, redirectChain, error, timestamp };
    });

    const healthScore = document.getElementById('health-score').textContent;
    const summary = {
      total: document.getElementById('summary-total').textContent,
      ok: document.getElementById('summary-ok').textContent,
      redirects: document.getElementById('summary-redirects').textContent,
      broken: document.getElementById('summary-broken').textContent,
      risky: document.getElementById('summary-risky').textContent
    };

    const generatedDate = new Date().toLocaleString();
    const fileDate = new Date().toISOString().slice(0, 10).replace(/-/g, '');

    const workingLinks = results.filter(r => r.status === 'OK');
    const brokenLinks = results.filter(r => r.status === 'Broken');
    const problematicLinks = results.filter(r => ['Redirect', 'Risky', 'Timeout', 'Unreachable', 'Invalid', 'Unknown'].includes(r.status));

    const csvContent = [
      '"LINKCHECKR PRO SCAN REPORT"',
      `"Generated by SIAM on ${generatedDate}"`,
      '"Website: https://m-siam.github.io/LinkChecker-Pro/"',
      '"Generated with LinkCheckr Pro v1.0"',
      '"© 2025 SIAM. All rights reserved."',
      '',
      '"SCAN SUMMARY"',
      '"Metric","Value"',
      `"Link Health","${healthScore}"`,
      `"Total Links","${summary.total}"`,
      `"OK","${summary.ok}"`,
      `"Redirects","${summary.redirects}"`,
      `"Broken","${summary.broken}"`,
      `"Risky","${summary.risky}"`,
      '',
      '"LINK STATUS BREAKDOWN"',
      '"Note: Working Links are fully accessible (OK). Broken Links are inaccessible (HTTP 400–599). Problematic Links include redirects, risky, timeout, unreachable, invalid, or unknown statuses."',
      '',
      `"WORKING LINKS (${workingLinks.length})"`,
      '"URL","Status Description","Timestamp"',
      ...workingLinks.map(link =>
        `"${link.url.replace(/"/g, '""')}","${link.statusTooltip.replace(/"/g, '""')}","${link.timestamp.replace(/"/g, '""')}"`
      ),
      '"---"',
      `"BROKEN LINKS (${brokenLinks.length})"`,
      '"URL","Status Description","Timestamp"',
      ...brokenLinks.map(link =>
        `"${link.url.replace(/"/g, '""')}","${link.statusTooltip.replace(/"/g, '""')}","${link.timestamp.replace(/"/g, '""')}"`
      ),
      '"---"',
      `"PROBLEMATIC LINKS (${problematicLinks.length})"`,
      '"URL","Status Description","Timestamp"',
      ...problematicLinks.map(link =>
        `"${link.url.replace(/"/g, '""')}","${link.statusTooltip.replace(/"/g, '""')}","${link.timestamp.replace(/"/g, '""')}"`
      ),
      '"---"',
      '"DETAILED RESULTS"',
      '"URL","Status","Status Description","Redirect Chain","Error","Timestamp"',
      ...results.map(result =>
        `"${result.url.replace(/"/g, '""')}","${result.status.replace(/"/g, '""')}","${result.statusTooltip.replace(/"/g, '""')}","${result.redirectChain.replace(/"/g, '""')}","${result.error.replace(/"/g, '""')}","${result.timestamp.replace(/"/g, '""')}"`
      ),
      '',
      '"Thank you for using LinkCheckr Pro!"'
    ].join('\n');

    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.setAttribute('href', url);
    link.setAttribute('download', `LinkCheckr_Pro_Scan_${fileDate}.csv`);
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  } catch (err) {
    console.error('CSV export error:', err);
    showToast('Failed to export CSV. Please try again.', 'error');
  }
}
