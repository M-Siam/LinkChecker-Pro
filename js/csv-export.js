function exportToCSV() {
  try {
    const results = Array.from(document.querySelectorAll('.result-card')).map(card => {
      const url = card.querySelector('.url').textContent;
      const status = card.querySelector('.status-text').textContent.trim();
      const statusTooltip = card.querySelector('.status-badge').getAttribute('data-tooltip');
      const details = card.querySelector('.details').innerHTML.replace(/<br>/g, '; ');
      const redirectChain = details.includes('Redirect Chain') ? details.split('; ').find(d => d.startsWith('Redirect Chain')).replace('Redirect Chain: ', '') : '-';
      const error = details.includes('Redirect Chain') ? details.split('; ').filter(d => !d.startsWith('Redirect Chain')).join('; ') : details || '-';
      const timestamp = card.querySelector('.timestamp').textContent.replace('Scanned: ', '');
      let condition = '';
      switch (status.toLowerCase()) {
        case 'ok':
          condition = 'Working';
          break;
        case 'broken':
          condition = 'Broken';
          break;
        case 'redirect':
        case 'risky':
        case 'timeout':
        case 'unreachable':
        case 'invalid':
        case 'unknown':
          condition = 'Problematic';
          break;
      }
      return { url, status, statusTooltip, condition, redirectChain, error, timestamp };
    });

    const healthScore = document.getElementById('health-score').textContent;
    const summary = {
      total: parseInt(document.getElementById('summary-total').textContent),
      ok: parseInt(document.getElementById('summary-ok').textContent),
      redirects: parseInt(document.getElementById('summary-redirects').textContent),
      broken: parseInt(document.getElementById('summary-broken').textContent),
      risky: parseInt(document.getElementById('summary-risky').textContent)
    };
    const generatedDate = new Date().toLocaleString();
    const fileDate = new Date().toISOString().slice(0, 10).replace(/-/g, '');
    const proxyUsed = document.getElementById('use-proxy').checked ? 'Yes' : 'No';

    const csvContent = [
      '"=== LinkCheckr Pro Scan Report ==="',
      `"Generated by SIAM on ${generatedDate}"`,
      '"Website: https://m-siam.github.io/LinkChecker-Pro/"',
      '"Â© 2025 SIAM. All rights reserved."',
      '',
      '"=== Scan Metadata ==="',
      '"Parameter","Value"',
      `"Proxy Used","${proxyUsed}"`,
      `"Generated Date","${generatedDate}"`,
      '',
      '"=== Scan Summary ==="',
      '"Metric","Value","Percentage"',
      `"Link Health","${healthScore}","-"`,
      `"Total Links","${summary.total}","-"`,
      `"OK","${summary.ok}","${summary.total > 0 ? ((summary.ok / summary.total) * 100).toFixed(2) : 0}% (${summary.ok}/${summary.total})"`,
      `"Redirects","${summary.redirects}","${summary.total > 0 ? ((summary.redirects / summary.total) * 100).toFixed(2) : 0}% (${summary.redirects}/${summary.total})"`,
      `"Broken","${summary.broken}","${summary.total > 0 ? ((summary.broken / summary.total) * 100).toFixed(2) : 0}% (${summary.broken}/${summary.total})"`,
      `"Risky","${summary.risky}","${summary.total > 0 ? ((summary.risky / summary.total) * 100).toFixed(2) : 0}% (${summary.risky}/${summary.total})"`,
      '',
      '"=== Detailed Results ==="',
      '"URL","Status","Condition","Status Description","Redirect Chain","Error","Timestamp"',
      ...results.map(result =>
        `"${result.url.replace(/"/g, '""')}","${result.status.replace(/"/g, '""')}","${result.condition.replace(/"/g, '""')}","${result.statusTooltip.replace(/"/g, '""')}","${result.redirectChain.replace(/"/g, '""')}","${result.error.replace(/"/g, '""')}","${result.timestamp.replace(/"/g, '""')}"`
      )
    ].join('\n');

    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.setAttribute('href', url);
    link.setAttribute('download', `LinkCheckr_Pro_Scan_${fileDate}.csv`);
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  } catch (err) {
    console.error('CSV export error:', err);
    showToast('Failed to export CSV. Please try again.', 'error');
  }
}
