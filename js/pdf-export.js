function exportToPDF() {
  try {
    const results = Array.from(document.querySelectorAll('.result-card')).map(card => {
      const url = card.querySelector('.url').textContent;
      const status = card.querySelector('.status-text').textContent.trim();
      const statusTooltip = card.querySelector('.status-badge').getAttribute('data-tooltip');
      const details = card.querySelector('.details').innerHTML.replace(/<br>/g, '; ');
      const redirectChain = details.includes('Redirect Chain') ? details.split('; ').find(d => d.startsWith('Redirect Chain')).replace('Redirect Chain: ', '') : '-';
      const error = details.includes('Redirect Chain') ? details.split('; ').filter(d => !d.startsWith('Redirect Chain')).join('; ') : details || '-';
      const timestamp = card.querySelector('.timestamp').textContent.replace('Scanned: ', '');
      return { url, status, statusTooltip, redirectChain, error, timestamp };
    });

    const healthScore = document.getElementById('health-score').textContent;
    const summary = {
      total: document.getElementById('summary-total').textContent,
      ok: document.getElementById('summary-ok').textContent,
      redirects: document.getElementById('summary-redirects').textContent,
      broken: document.getElementById('summary-broken').textContent,
      risky: document.getElementById('summary-risky').textContent
    };

    const generatedDate = new Date().toLocaleString();
    const fileDate = new Date().toISOString().slice(0, 10).replace(/-/g, '');

    const workingLinks = results.filter(r => r.status === 'OK');
    const brokenLinks = results.filter(r => r.status === 'Broken');
    const problematicLinks = results.filter(r => ['Redirect', 'Risky', 'Timeout', 'Unreachable', 'Invalid', 'Unknown'].includes(r.status));

    const exportContent = document.createElement('div');
    exportContent.style.padding = '30px';
    exportContent.style.fontFamily = '"Poppins", sans-serif';
    exportContent.style.color = '#1A1C23';
    exportContent.style.background = '#FFFFFF';
    exportContent.style.position = 'relative';
    exportContent.innerHTML = `
      <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&family=Dancing+Script:wght@700&display=swap');
        .watermark {
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%) rotate(-45deg);
          font-size: 60px;
          color: rgba(61, 90, 254, 0.1);
          font-family: 'Poppins', sans-serif;
          font-weight: 600;
          pointer-events: none;
          z-index: -1;
        }
        .signature {
          position: absolute;
          bottom: 20px;
          left: 30px;
          font-family: 'Dancing Script', cursive;
          font-size: 24px;
          color: #3D5AFE;
        }
        .page-footer {
          position: running(pageFooter);
          text-align: center;
          font-size: 10px;
          color: #6B7280;
          margin-top: 20px;
        }
        @page {
          @bottom-center {
            content: element(pageFooter);
          }
        }
      </style>
      <div class="watermark">LinkCheckr Pro</div>
      <div style="text-align: center; margin-bottom: 30px; border-bottom: 2px solid; border-image: linear-gradient(to right, #3D5AFE, #8C9EFF) 1;">
        <img src="assets/logo.svg" alt="LinkCheckr Pro Logo" style="width: 60px; height: 60px; margin-bottom: 10px; filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));">
        <h1 style="font-size: 28px; font-weight: 800; color: #3D5AFE; margin: 0;">LinkCheckr Pro Scan Report</h1>
        <p style="font-size: 16px; font-weight: 500; color: #1A1C23;">Generated by SIAM on ${generatedDate}</p>
        <p style="font-size: 14px; color: #3D5AFE;">
          <a href="https://m-siam.github.io/LinkChecker-Pro/" style="color: #3D5AFE; text-decoration: none;">https://m-siam.github.io/LinkChecker-Pro/</a>
        </p>
        <p style="font-size: 12px; color: #6B7280; margin-top: 5px;">© 2025 SIAM. All rights reserved.</p>
      </div>
      <h2 style="font-size: 20px; font-weight: 700; color: #3D5AFE; margin-bottom: 15px;">Scan Summary</h2>
      <table style="width: 100%; border-collapse: collapse; font-size: 14px; margin-bottom: 30px;">
        <tr style="background: #F1F3F5;">
          <th style="padding: 10px; border: 1px solid #E0E0E0; text-align: left;">Metric</th>
          <th style="padding: 10px; border: 1px solid #E0E0E0; text-align: left;">Value</th>
        </tr>
        <tr style="background: #F9FAFB;">
          <td style="padding: 10px; border: 1px solid #E0E0E0;">Link Health</td>
          <td style="padding: 10px; border: 1px solid #E0E0E0;">${healthScore}</td>
        </tr>
        <tr>
          <td style="padding: 10px; border: 1px solid #E0E0E0;">Total Links</td>
          <td style="padding: 10px; border: 1px solid #E0E0E0;">${summary.total}</td>
        </tr>
        <tr style="background: #F9FAFB;">
          <td style="padding: 10px; border: 1px solid #E0E0E0;">OK</td>
          <td style="padding: 10px; border: 1px solid #E0E0E0;">${summary.ok}</td>
        </tr>
        <tr>
          <td style="padding: 10px; border: 1px solid #E0E0E0;">Redirects</td>
          <td style="padding: 10px; border: 1px solid #E0E0E0;">${summary.redirects}</td>
        </tr>
        <tr style="background: #F9FAFB;">
          <td style="padding: 10px; border: 1px solid #E0E0E0;">Broken</td>
          <td style="padding: 10px; border: 1px solid #E0E0E0;">${summary.broken}</td>
        </tr>
        <tr>
          <td style="padding: 10px; border: 1px solid #E0E0E0;">Risky</td>
          <td style="padding: 10px; border: 1px solid #E0E0E0;">${summary.risky}</td>
        </tr>
      </table>
      <h2 style="font-size: 20px; font-weight: 700; color: #3D5AFE; margin-bottom: 15px;">Link Status Breakdown</h2>
      <p style="font-size: 12px; color: #6B7280; margin-bottom: 15px;">
        Working Links are fully accessible (OK). Broken Links are inaccessible (HTTP 400–599).
        Problematic Links include redirects, risky, timeout, unreachable, invalid, or unknown statuses.
      </p>
      <h3 style="font-size: 16px; font-weight: 600; color: #4CAF50; margin: 15px 0 10px; background: rgba(76, 175, 80, 0.1); padding: 8px;">Working Links (${workingLinks.length})</h3>
      ${workingLinks.length ? `
        <table style="width: 100%; border-collapse: collapse; font-size: 12px; margin-bottom: 20px;">
          <tr style="background: #F1F3F5;">
            <th style="padding: 8px; border: 1px solid #E0E0E0; text-align: left; width: 50%;">URL</th>
            <th style="padding: 8px; border: 1px solid #E0E0E0; text-align: left; width: 30%;">Status Description</th>
            <th style="padding: 8px; border: 1px solid #E0E0E0; text-align: left; width: 20%;">Timestamp</th>
          </tr>
          ${workingLinks.map((link, i) => `
            <tr style="background: ${i % 2 ? '#F9FAFB' : '#FFFFFF'};">
              <td style="padding: 8px; border: 1px solid #E0E0E0; word-break: break-all;">${link.url}</td>
              <td style="padding: 8px; border: 1px solid #E0E0E0;">${link.statusTooltip}</td>
              <td style="padding: 8px; border: 1px solid #E0E0E0;">${link.timestamp}</td>
            </tr>
          `).join('')}
        </table>
      ` : '<p style="font-size: 12px; color: #6B7280; margin-bottom: 20px;">No working links found.</p>'}
      <h3 style="font-size: 16px; font-weight: 600; color: #E53935; margin: 15px 0 10px; background: rgba(229, 57, 53, 0.1); padding: 8px;">Broken Links (${brokenLinks.length})</h3>
      ${brokenLinks.length ? `
        <table style="width: 100%; border-collapse: collapse; font-size: 12px; margin-bottom: 20px;">
          <tr style="background: #F1F3F5;">
            <th style="padding: 8px; border: 1px solid #E0E0E0; text-align: left; width: 50%;">URL</th>
            <th style="padding: 8px; border: 1px solid #E0E0E0; text-align: left; width: 30%;">Status Description</th>
            <th style="padding: 8px; border: 1px solid #E0E0E0; text-align: left; width: 20%;">Timestamp</th>
          </tr>
          ${brokenLinks.map((link, i) => `
            <tr style="background: ${i % 2 ? '#F9FAFB' : '#FFFFFF'};">
              <td style="padding: 8px; border: 1px solid #E0E0E0; word-break: break-all;">${link.url}</td>
              <td style="padding: 8px; border: 1px solid #E0E0E0;">${link.statusTooltip}</td>
              <td style="padding: 8px; border: 1px solid #E0E0E0;">${link.timestamp}</td>
            </tr>
          `).join('')}
        </table>
      ` : '<p style="font-size: 12px; color: #6B7280; margin-bottom: 20px;">No broken links found.</p>'}
      <h3 style="font-size: 16px; font-weight: 600; color: #FFB300; margin: 15px 0 10px; background: rgba(255, 179, 0, 0.1); padding: 8px;">Problematic Links (${problematicLinks.length})</h3>
      ${problematicLinks.length ? `
        <table style="width: 100%; border-collapse: collapse; font-size: 12px; margin-bottom: 20px;">
          <tr style="background: #F1F3F5;">
            <th style="padding: 8px; border: 1px solid #E0E0E0; text-align: left; width: 50%;">URL</th>
            <th style="padding: 8px; border: 1px solid #E0E0E0; text-align: left; width: 30%;">Status Description</th>
            <th style="padding: 8px; border: 1px solid #E0E0E0; text-align: left; width: 20%;">Timestamp</th>
          </tr>
          ${problematicLinks.map((link, i) => `
            <tr style="background: ${i % 2 ? '#F9FAFB' : '#FFFFFF'};">
              <td style="padding: 8px; border: 1px solid #E0E0E0; word-break: break-all;">${link.url}</td>
              <td style="padding: 8px; border: 1px solid #E0E0E0;">${link.statusTooltip}</td>
              <td style="padding: 8px; border: 1px solid #E0E0E0;">${link.timestamp}</td>
            </tr>
          `).join('')}
        </table>
      ` : '<p style="font-size: 12px; color: #6B7280; margin-bottom: 20px;">No problematic links found.</p>'}
      <h2 style="font-size: 20px; font-weight: 700; color: #3D5AFE; margin-bottom: 15px;">Detailed Results</h2>
      <table style="width: 100%; border-collapse: collapse; font-size: 12px;">
        <thead>
          <tr style="background: #F1F3F5;">
            <th style="padding: 10px; border: 1px solid #E0E0E0; text-align: left; width: 30%;">URL</th>
            <th style="padding: 10px; border: 1px solid #E0E0E0; text-align: left; width: 10%;">Status</th>
            <th style="padding: 10px; border: 1px solid #E0E0E0; text-align: left; width: 20%;">Status Description</th>
            <th style="padding: 10px; border: 1px solid #E0E0E0; text-align: left; width: 20%;">Redirect Chain</th>
            <th style="padding: 10px; border: 1px solid #E0E0E0; text-align: left; width: 10%;">Error</th>
            <th style="padding: 10px; border: 1px solid #E0E0E0; text-align: left; width: 10%;">Timestamp</th>
          </tr>
        </thead>
        <tbody>
          ${results.map((result, i) => `
            <tr style="background: ${i % 2 ? '#F9FAFB' : '#FFFFFF'};">
              <td style="padding: 10px; border: 1px solid #E0E0E0; word-break: break-all;">${result.url}</td>
              <td style="padding: 10px; border: 1px solid #E0E0E0;">${result.status}</td>
              <td style="padding: 10px; border: 1px solid #E0E0E0;">${result.statusTooltip}</td>
              <td style="padding: 10px; border: 1px solid #E0E0E0;">${result.redirectChain}</td>
              <td style="padding: 10px; border: 1px solid #E0E0E0;">${result.error}</td>
              <td style="padding: 10px; border: 1px solid #E0E0E0;">${result.timestamp}</td>
            </tr>
          `).join('')}
        </tbody>
      </table>
      <div class="signature">SIAM, Website Owner</div>
      <div class="page-footer" id="pageFooter">
        Page <span class="pageNumber"></span> | <a href="https://m-siam.github.io/LinkChecker-Pro/" style="color: #3D5AFE; text-decoration: none;">LinkCheckr Pro</a>
      </div>
    `;

    const opt = {
      margin: [0.5, 0.5, 0.8, 0.5],
      filename: `LinkCheckr_Pro_Scan_${fileDate}.pdf`,
      image: { type: 'jpeg', quality: 0.98 },
      html2canvas: { scale: 2, useCORS: true },
      jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' },
      pagebreak: { mode: ['avoid-all', 'css', 'legacy'] }
    };

    html2pdf().from(exportContent).set(opt).save().catch(err => {
      console.error('PDF export failed:', err);
      showToast('Failed to export PDF. Please try again.', 'error');
    });
  } catch (err) {
    console.error('PDF export error:', err);
    showToast('Failed to export PDF. Please try again.', 'error');
  }
}
